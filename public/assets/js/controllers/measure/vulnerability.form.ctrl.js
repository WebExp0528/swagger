(function () {
    VulnerabilityFormController.$inject = ['$scope', '$rootScope', '$state', 'MeasureService', 'Utils'];
    app.controller('VulnerabilityFormCtrl', VulnerabilityFormController);

    function VulnerabilityFormController($scope, $rootScope, $state, MeasureService, Utils) {
        $scope.mainTitle = $state.current.title;
        $scope.mainDesc = "Add Vulnerability";

        $scope.Form = {};

        $scope.VM = {
            createdBy:  '',
            createdOn:  '',
            issue:    '',
            description:    '',
            affectedUrls:  '',
            riskLevel: '',
            modifiedBy: '',
            modifiedOn: '',
            hostName: '',
            application: '',
            department: '',
            owner: ''
        };

        $scope.submitAction = function(){
            $scope.IsSubmitted = true;
            if($scope.Form.Vulnerability.$invalid) return false;

            $scope.createdOn = new Date();
            $scope.VM.createdBy = $rootScope.user.name;
            $scope.VM.modifiedOn = $scope.VM.createdOn;
            $scope.VM.modifiedBy = $scope.VM.createdBy;

            var dtype = 'YYYY-MM-DD';
            var d1 = moment($scope.VM.createdOn);
            var d2 = moment($scope.VM.modifiedOn);
            $scope.VM.createdOn = (d1.isValid()) ? d1.format(dtype) : '';
            $scope.VM.modifiedOn = (d2.isValid()) ? d2.format(dtype) : '';
            $scope.VM.createonDtStr = $scope.VM.createdOn;
            $scope.VM.modifiedonDtStr = $scope.VM.modifiedOn;

            MeasureService.AddVuln($scope.VM).then(function (res) {
                console.log('res',res);
            }).finally(function () {
                $state.go('app.measure.vulner.main');
            });
        };

        $scope.cancelAction = function(){
            if($scope.Form.Vulnerability.$dirty){
                var confirm = Utils.CreateConfirmModal("Confirmation", "Do you want to cancel and if yes you should go back to previous screen", "Yes", "No");
                confirm.result.then(function(){
                    $state.go('app.measure.vulner.main');
                });
                return false;
            }
            $state.go('app.measure.vulner.main');
        };

        $rootScope.app.Mask = false;
    }
})();
